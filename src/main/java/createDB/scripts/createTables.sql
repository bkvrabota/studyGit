-------------- CREATE TABLES ---------------
CREATE TABLE Book (
	idBook INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY (START WITH 4),
	available BOOLEAN NOT NULL ,
	genre VARCHAR(45) NULL,
    publisher VARCHAR(45) NULL,
    author VARCHAR(45) NOT NULL,
    title VARCHAR(45) NOT NULL,
    description VARCHAR(100) NOT NULL,
    price DECIMAL NULL,
    amount INTEGER NOT NULL,
    datePublic DATE NOT NULL,
      PRIMARY KEY (idBook)
);

CREATE TABLE Client (
	idClient INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY (START WITH 4),
    cardNumber INTEGER NOT NULL,
    phone VARCHAR(45) NOT NULL,
    firstName VARCHAR(45) NOT NULL,
    lastName VARCHAR(45) NOT NULL,
      PRIMARY KEY (idClient),
      UNIQUE(cardNumber)
);

CREATE TABLE Orders (
	idOrder INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY (START WITH 4),
    statusOrder VARCHAR(45) NOT NULL,
    client INTEGER NULL,
    dateExecution DATE NOT NULL,
    buyBooks INTEGER NULL,
    orderPrice DECIMAL NULL,
      PRIMARY KEY (idOrder),
      FOREIGN KEY (client) REFERENCES Client (idClient)
      ON UPDATE CASCADE
      ON DELETE CASCADE,
      FOREIGN KEY (buyBooks) REFERENCES Book (idBook)
      ON UPDATE CASCADE
      ON DELETE CASCADE
);

CREATE TABLE Requests (
	idRequest INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY (START WITH 4),
    client INTEGER NULL,
    dateRequest DATE NOT NULL,
    requestBooks INTEGER NULL,
    reqStatus VARCHAR(45) NOT NULL,
      PRIMARY KEY (idRequest),
      FOREIGN KEY (client) REFERENCES Client (idClient)
      ON UPDATE CASCADE
      ON DELETE CASCADE,
      FOREIGN KEY (requestBooks) REFERENCES Book (idBook)
      ON UPDATE CASCADE
      ON DELETE CASCADE
);

CREATE TABLE book_orders (
	idBook INTEGER NULL GENERATED BY DEFAULT AS IDENTITY (START WITH 4),
	idOrder INTEGER NULL GENERATED BY DEFAULT AS IDENTITY (START WITH 4),
      PRIMARY KEY (idBook, idOrder),
      FOREIGN KEY (idBook) REFERENCES Book (idBook)
            ON UPDATE CASCADE
            ON DELETE CASCADE,
      FOREIGN KEY (idOrder) REFERENCES Orders (idOrder)
            ON UPDATE CASCADE
            ON DELETE CASCADE
);